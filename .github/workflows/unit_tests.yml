name: unit tests

on:
  push:
  pull_request:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        # Temporarily commenting out windows until we fix the DLL issues
        # os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v2
      with:
        cmake-version: '3.28.x'
    
    # Add MinGW to PATH on Windows
    - name: Setup Windows
      if: runner.os == 'Windows'
      run: |
        echo "C:\msys64\mingw64\bin" >> $GITHUB_PATH
        # Ensure the DLL directory is in the Path
        echo "PATH=$PATH;C:\msys64\mingw64\bin" >> $GITHUB_ENV
      shell: bash
    
    - name: make build
      run: make build
      
    - name: make test
      run: make test/junit || make test/rerun-failed

    - name: Report test results
      uses: dorny/test-reporter@v2
      if: ${{ !cancelled() }}
      with:
        name: unit Tests
        path: junit.xml
        reporter: java-junit

    - name: ⚙️ Install lcov
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get -y install lcov

    - name: coverage.info
      if: runner.os == 'Linux'
      run: make coverage/info

    - name: Upload coverage to Codecov
      if: runner.os == 'Linux'
      uses: codecov/codecov-action@v5
      with:
        files: .coverage/coverage.info
        flags: unittests
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}
